Vagrant.configure("2") do |config|
  # Specify the base VM image
  config.vm.box = "ubuntu/focal64"
  config.ssh.insert_key = false

  # Common provision script to set up both VMs
  config.vm.provision "shell", inline: <<-SHELL
    sudo apt-get update -y
    sudo apt-get install -y iputils-ping avahi-daemon libnss-mdns unzip \
        openjdk-17-jdk-headless
  SHELL

  #============
  # Configuration for the database VM
  config.vm.define "db" do |db|
    db.vm.box = "ubuntu/focal64"
    db.vm.hostname = "db"
    db.vm.network "private_network", ip: "192.168.56.11"

    # Forward ports for H2 console and server access
    db.vm.network "forwarded_port", guest: 8082, host: 8082
    db.vm.network "forwarded_port", guest: 9092, host: 9092

    # Download H2 database JAR file
    db.vm.provision "shell", inline: <<-SHELL
      wget https://repo1.maven.org/maven2/com/h2database/h2/1.4.200/h2-1.4.200.jar
    SHELL

    # Run the H2 server, ensuring it always runs
    db.vm.provision "shell", :run => 'always', inline: <<-SHELL
      java -cp ./h2*.jar org.h2.tools.Server -web -webAllowOthers -tcp -tcpAllowOthers -ifNotExists > ~/out.txt &
    SHELL
  end

  #============
  # Configuration for the web server VM
  config.vm.define "web" do |web|
    web.vm.box = "ubuntu/focal64"
    web.vm.hostname = "web"
    web.vm.network "private_network", ip: "192.168.56.10"

    web.vm.provider "virtualbox" do |v|
      # Set VM resources for memory and CPUs
      v.memory = 2048
      v.cpus = 2
    end

    # Forward port for accessing the web application
    web.vm.network "forwarded_port", guest: 8080, host: 8080

    # Provisioning script for setting up the web server
    web.vm.provision "shell", inline: <<-SHELL
      sudo apt-get update -y
      sudo apt-get install -y curl

      # Install Node.js via nodesource setup script
      curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -
      sudo apt-get install -y nodejs

      # Clean npm cache
      sudo npm cache clean --force

      # Install Webpack globally (optional)
      sudo npm install -g webpack webpack-cli

      # Switch to the vagrant user to perform npm installs and Gradle build
      sudo -u vagrant -H bash -c "
        # Navigate to the vagrant home directory
        cd /home/vagrant

        # Clone the GitHub repository containing the application
        git clone https://github.com/LloydCosta87/devops-23-24-JPE-1231838.git

        # Change to the project directory
        cd devops-23-24-JPE-1231838/CA2/Part2/react-and-spring-data-rest-basic

        # Remove node_modules to ensure a clean state
        rm -rf node_modules

        # Install project dependencies using npm
        npm install

        # Run Webpack using npx to compile the JavaScript files
        npx webpack --config webpack.config.js

        # Ensure the Gradle wrapper is executable
        chmod +x gradlew

        # Execute the npm build script
        npm run build

        # Build the project using Gradle and provide a stack trace on error
        ./gradlew build --stacktrace

        # Run the Spring Boot application in the background and log output to a file
        nohup ./gradlew bootRun > /home/vagrant/spring-boot-app.log 2>&1 &
      "
    SHELL
  end
end
